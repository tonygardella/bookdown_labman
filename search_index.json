[
["index.html", "Dietze Lab Setup Preface 0.1 Handy tips", " Dietze Lab Setup Betsy Cowdery Tony Gardella Preface Getting setup on the PEcAn Servers This information is exclusively for members of the Dietze lab and is not for public use. 0.1 Handy tips You can make inline comments that will also be recorded as issues in the book All the headers should have links (just like in the github wiki) This is a youtube video about PEcAn! We are fancy! Very fancy! {% youtube %}https://www.youtube.com/watch?v=E2W_Qmc5qec{% endyoutube %} "],
["apache-configuration-setting-up-the-web-interface.html", "1 Apache Configuration (setting up the web interface) 1.1 Configure Apache - need sudo permissions 1.2 config.php 1.3 Testing", " 1 Apache Configuration (setting up the web interface) 1.1 Configure Apache - need sudo permissions # become root (so get Betsy or Mike) sudo -s # get index page rm /var/www/html/index.html ln -s /home/carya/pecan/documentation/index_vm.html /var/www/html/index.html # fix selinux context (does this need to be done after PEcAn is installed?) ??? - What is this? chcon -R -t httpd_sys_content_t /home/carya/pecan /home/carya/output # In /etc/httpd/conf.d make a new file pecan_USERNAME Alias /pecan /home/carya/pecan/web &lt;Directory /home/carya/pecan/web&gt; DirectoryIndex index.php Options +ExecCGI Require all granted &lt;/Directory&gt; a2enconf pecan ???? /etc/init.d/httpd restart # done as root exit 1.2 config.php Copy pecan/web/config.example.php to pecan/web/config.phpand fill in your personal configurations 1.2.1 Betsy’s config.php This is what Betsy has in her config.php - you can see the sections she changed to inform the way you customize your config.php Bety configuration # Information to connect to the BETY database $db_bety_type=&quot;pgsql&quot;; $db_bety_hostname=&quot;psql-pecan.bu.edu&quot;; $db_bety_username=&quot;bety&quot;; $db_bety_password=&quot;bety&quot;; $db_bety_database=&quot;bety&quot;; FIA configuration - not setup but can be filled in Browndog configuration # browdog information $browndog_url=&quot;http://dap.ncsa.illinois.edu:8184/convert/&quot;; $browndog_username=&quot;browndog.user&quot;; $browndog_password=&quot;GritGin3&quot;; Host configuration Here Betsy changed her commands to qsub, but these changes are NOT necessary, UNLESS you want to do ED runs on geo. If so, refer to instructions on setting up qsub reqests on the geo server. This does NOT need to be changed in config.php. You can also change these entries in the pecan.xml file when setting up a run through the web interface. # List of all host and options. The list should be the server pointing # to an array. The second array contains a key value pair used to # configure the host. Currenly the following options are available: # - qsub : if specified the jobs are launched using qsub, this can # be an empty value to indicate to use default settings. # If not specified jobs are run on the host itself. # - jobid : regex used to parse jobid, only used if qsub specified. # - qstat : command used to check if job submitted using qsub is # finished. # - launcher : path to modellauncher, used to for a single job that # consists of many smaller jobs # - job.sh : any special parameters to add to the job.sh file. # - folder : folder on remote machine, will add username and the # workflowid to the folder name # - models : any special options to add to a specific model that is # launched. This is an array of the modeltype and # additional parameters for the job.sh. $hostlist=array($fqdn =&gt; array(), &quot;geo.bu.edu&quot; =&gt; array(&quot;qsub&quot; =&gt; &quot;qsub -l h_rt=24:00:00 -pe omp 8 -q &#39;geo*&#39; -V -v OMP_NUM_THREADS=8 -N @NAME@ -o @STDOUT@ -e @STDERR@ -S /bin/bash&quot;, &quot;jobid&quot; =&gt; &quot;Your job ([0-9]+) .*&quot;, &quot;qstat&quot; =&gt; &quot;qstat -j @JOBID@ || echo DONE&quot;, &quot;job.sh&quot; =&gt; &quot;module load udunits R/R-3.0.0_gnu-4.4.6&quot;, &quot;folder&quot; =&gt; &quot;/projectnb/dietzelab/ecowdery/outputs/&quot;, &quot;models&quot; =&gt; array(&quot;ED2&quot; =&gt; &quot;module load hdf5&quot;))); test-pecan specific paths # Folder where PEcAn is installed $pecan_install=&quot;/home/ecowdery/R/library&quot;; # Location where PEcAn is installed, not really needed anymore $pecan_home=&quot;/home/ecowdery/pecan/&quot;; # Folder where the runs are stored $output_folder=&quot;/fs/data2/output/&quot;; # Folder where the met inputs are stored $input_folder=&quot;/fs/data1/pecan.data/input/&quot;; $dbfiles_folder=&quot;/fs/data1/pecan.data/dbfiles/&quot;; # location of BETY DB set to empty to not create links, can be both # relative or absolute paths or full URL&#39;s. Should point to the base # of BETYDB $betydb=&quot;http:/psql-pecan.bu.edu/bety&quot;; Rebuild pecan ./pecan/scripts/build.sh 1.3 Testing There are two sites that should be functional: PEcAn Interface: Login with your betydb username and password test-pecan.bu.edu/pecan_USERNAME Rstudio: Login with your pecan servers username and password. If this doesn’t work, you need to contact Mike and ask him to add you to the dietze lab group on all the pecan servers. test-pecan:8787 "],
["installing-pecan.html", "2 Installing PEcAn 2.1 Setup ssh key for github 2.2 Clone Your FORK of PEcAn 2.3 First build of PEcAn", " 2 Installing PEcAn 2.1 Setup ssh key for github We recommend following the github documentation https://help.github.com/articles/generating-ssh-keys/ NOTE: For step 4 (adding your SSH key to your account) the pecan servers don’t have pbcopy so cat .ssh/id_rsa.pub and manually copy paste. 2.2 Clone Your FORK of PEcAn Install the build of pecan in local repo (where you will do the development) Make sure you use the SSH url You can copy the link from the github webpage for the repository. For example, to clone Betsy’s version of PEcAn: cd git clone git@github.com:PecanProject/bcow.git 2.3 First build of PEcAn cd pecan make Every time you make changes to the PEcAn code you will need to rebuild. However, you won’t need to rebuild dependencies. 2.3.1 Troubleshooting If the build is broken, make sure that you have the latest version of the pecan code git pull upstream master and rebuild Do you have the right build of python? We may need to reinstall… "],
["setup-your-personal-r-library.html", "3 Setup your personal R library 3.1 Is this your first time setting up your R library? 3.2 Have you already set up your R library? 3.3 Troubleshooting", " 3 Setup your personal R library 3.1 Is this your first time setting up your R library? Make sure to replace USERNAME # Create the directory for your personal R library # (the home of your pecan package) # and save the path to your .bashrc file echo &#39;export R_LIBS_USER=${HOME}/R/library&#39; &gt;&gt; ~/.bashrc source ~/.bashrc mkdir -p ${R_LIBS_USER} # Create symbolic link from your home directory to the actual location of the R library mkdir /fs/data3/USERNAME/R/library ln -s /fs/data3/USERNAME/R/library/ ~/R/ 3.2 Have you already set up your R library? If you’ve already been using test-pecan, you may have already defined $R_LIBS_USER and maybe even have started installing packages in ~/R/library, if this is the case, you just need to move the files over to the new R/library directory and make a symbolic link. Why did we change this? Because there isn’t enough room in the home directory. mkdir /fs/data3/USERNAME/R/library mv -v ~/R/library/* /fs/data3/USERNAME/R/library/ # Create symbolic link from your home directory to the actual location of the R library ln -s ~/R/library/ /fs/data3/USERNAME/R/library/ If you have already installed PEcAn, rebuild. 3.3 Troubleshooting # Make sure Betsy setup Rstudio to the right R library echo &#39;r-libs-user=~/R/library &gt;&gt; /etc/rstudio/rsession.conf "],
["the-pecan-servers.html", "4 The PEcAn Servers 4.1 The structure of the servers", " 4 The PEcAn Servers 4.1 The structure of the servers This chart looks kind of terrible but you can zoom in and I’ll make the text bigger "]
]
